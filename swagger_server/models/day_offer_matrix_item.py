# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.day_offer_matrix_item_values import DayOfferMatrixItemValues  # noqa: F401,E501
from swagger_server import util


class DayOfferMatrixItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, start_timestamp: datetime=None, end_timestamp: datetime=None, values: List[DayOfferMatrixItemValues]=None):  # noqa: E501
        """DayOfferMatrixItem - a model defined in Swagger

        :param start_timestamp: The start_timestamp of this DayOfferMatrixItem.  # noqa: E501
        :type start_timestamp: datetime
        :param end_timestamp: The end_timestamp of this DayOfferMatrixItem.  # noqa: E501
        :type end_timestamp: datetime
        :param values: The values of this DayOfferMatrixItem.  # noqa: E501
        :type values: List[DayOfferMatrixItemValues]
        """
        self.swagger_types = {
            'start_timestamp': datetime,
            'end_timestamp': datetime,
            'values': List[DayOfferMatrixItemValues]
        }

        self.attribute_map = {
            'start_timestamp': 'start_timestamp',
            'end_timestamp': 'end_timestamp',
            'values': 'values'
        }
        self._start_timestamp = start_timestamp
        self._end_timestamp = end_timestamp
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'DayOfferMatrixItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DayOfferMatrixItem of this DayOfferMatrixItem.  # noqa: E501
        :rtype: DayOfferMatrixItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_timestamp(self) -> datetime:
        """Gets the start_timestamp of this DayOfferMatrixItem.


        :return: The start_timestamp of this DayOfferMatrixItem.
        :rtype: datetime
        """
        return self._start_timestamp

    @start_timestamp.setter
    def start_timestamp(self, start_timestamp: datetime):
        """Sets the start_timestamp of this DayOfferMatrixItem.


        :param start_timestamp: The start_timestamp of this DayOfferMatrixItem.
        :type start_timestamp: datetime
        """
        if start_timestamp is None:
            raise ValueError("Invalid value for `start_timestamp`, must not be `None`")  # noqa: E501

        self._start_timestamp = start_timestamp

    @property
    def end_timestamp(self) -> datetime:
        """Gets the end_timestamp of this DayOfferMatrixItem.


        :return: The end_timestamp of this DayOfferMatrixItem.
        :rtype: datetime
        """
        return self._end_timestamp

    @end_timestamp.setter
    def end_timestamp(self, end_timestamp: datetime):
        """Sets the end_timestamp of this DayOfferMatrixItem.


        :param end_timestamp: The end_timestamp of this DayOfferMatrixItem.
        :type end_timestamp: datetime
        """
        if end_timestamp is None:
            raise ValueError("Invalid value for `end_timestamp`, must not be `None`")  # noqa: E501

        self._end_timestamp = end_timestamp

    @property
    def values(self) -> List[DayOfferMatrixItemValues]:
        """Gets the values of this DayOfferMatrixItem.


        :return: The values of this DayOfferMatrixItem.
        :rtype: List[DayOfferMatrixItemValues]
        """
        return self._values

    @values.setter
    def values(self, values: List[DayOfferMatrixItemValues]):
        """Sets the values of this DayOfferMatrixItem.


        :param values: The values of this DayOfferMatrixItem.
        :type values: List[DayOfferMatrixItemValues]
        """
        if values is None:
            raise ValueError("Invalid value for `values`, must not be `None`")  # noqa: E501

        self._values = values

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.day_offer_vector import DayOfferVector  # noqa: F401,E501
from swagger_server import util


class DayOfferMatrixEuroMWhPerPriceVector(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, price: float=None, values: DayOfferVector=None):  # noqa: E501
        """DayOfferMatrixEuroMWhPerPriceVector - a model defined in Swagger

        :param price: The price of this DayOfferMatrixEuroMWhPerPriceVector.  # noqa: E501
        :type price: float
        :param values: The values of this DayOfferMatrixEuroMWhPerPriceVector.  # noqa: E501
        :type values: DayOfferVector
        """
        self.swagger_types = {
            'price': float,
            'values': DayOfferVector
        }

        self.attribute_map = {
            'price': 'price',
            'values': 'values'
        }
        self._price = price
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'DayOfferMatrixEuroMWhPerPriceVector':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DayOfferMatrixEuroMWh_per_price_vector of this DayOfferMatrixEuroMWhPerPriceVector.  # noqa: E501
        :rtype: DayOfferMatrixEuroMWhPerPriceVector
        """
        return util.deserialize_model(dikt, cls)

    @property
    def price(self) -> float:
        """Gets the price of this DayOfferMatrixEuroMWhPerPriceVector.


        :return: The price of this DayOfferMatrixEuroMWhPerPriceVector.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this DayOfferMatrixEuroMWhPerPriceVector.


        :param price: The price of this DayOfferMatrixEuroMWhPerPriceVector.
        :type price: float
        """

        self._price = price

    @property
    def values(self) -> DayOfferVector:
        """Gets the values of this DayOfferMatrixEuroMWhPerPriceVector.


        :return: The values of this DayOfferMatrixEuroMWhPerPriceVector.
        :rtype: DayOfferVector
        """
        return self._values

    @values.setter
    def values(self, values: DayOfferVector):
        """Sets the values of this DayOfferMatrixEuroMWhPerPriceVector.


        :param values: The values of this DayOfferMatrixEuroMWhPerPriceVector.
        :type values: DayOfferVector
        """

        self._values = values

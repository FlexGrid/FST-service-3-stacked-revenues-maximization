# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.flex_contract import FlexContract  # noqa: F401,E501
from swagger_server.models.flex_offer import FlexOffer  # noqa: F401,E501
from swagger_server.models.flex_offer_result_expected_revenues import FlexOfferResultExpectedRevenues  # noqa: F401,E501
from swagger_server.models.pricing_result_aggregated_user_welfare import PricingResultAggregatedUserWelfare  # noqa: F401,E501
from swagger_server import util


class PricingResultFlexContracts(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, flex_contract: FlexContract=None, flexibility_revenues: FlexOfferResultExpectedRevenues=None, aggregated_user_welfare: PricingResultAggregatedUserWelfare=None, flexibility: FlexOffer=None):  # noqa: E501
        """PricingResultFlexContracts - a model defined in Swagger

        :param flex_contract: The flex_contract of this PricingResultFlexContracts.  # noqa: E501
        :type flex_contract: FlexContract
        :param flexibility_revenues: The flexibility_revenues of this PricingResultFlexContracts.  # noqa: E501
        :type flexibility_revenues: FlexOfferResultExpectedRevenues
        :param aggregated_user_welfare: The aggregated_user_welfare of this PricingResultFlexContracts.  # noqa: E501
        :type aggregated_user_welfare: PricingResultAggregatedUserWelfare
        :param flexibility: The flexibility of this PricingResultFlexContracts.  # noqa: E501
        :type flexibility: FlexOffer
        """
        self.swagger_types = {
            'flex_contract': FlexContract,
            'flexibility_revenues': FlexOfferResultExpectedRevenues,
            'aggregated_user_welfare': PricingResultAggregatedUserWelfare,
            'flexibility': FlexOffer
        }

        self.attribute_map = {
            'flex_contract': 'flex_contract',
            'flexibility_revenues': 'flexibility_revenues',
            'aggregated_user_welfare': 'aggregated_user_welfare',
            'flexibility': 'flexibility'
        }
        self._flex_contract = flex_contract
        self._flexibility_revenues = flexibility_revenues
        self._aggregated_user_welfare = aggregated_user_welfare
        self._flexibility = flexibility

    @classmethod
    def from_dict(cls, dikt) -> 'PricingResultFlexContracts':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PricingResult_flex_contracts of this PricingResultFlexContracts.  # noqa: E501
        :rtype: PricingResultFlexContracts
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flex_contract(self) -> FlexContract:
        """Gets the flex_contract of this PricingResultFlexContracts.


        :return: The flex_contract of this PricingResultFlexContracts.
        :rtype: FlexContract
        """
        return self._flex_contract

    @flex_contract.setter
    def flex_contract(self, flex_contract: FlexContract):
        """Sets the flex_contract of this PricingResultFlexContracts.


        :param flex_contract: The flex_contract of this PricingResultFlexContracts.
        :type flex_contract: FlexContract
        """

        self._flex_contract = flex_contract

    @property
    def flexibility_revenues(self) -> FlexOfferResultExpectedRevenues:
        """Gets the flexibility_revenues of this PricingResultFlexContracts.


        :return: The flexibility_revenues of this PricingResultFlexContracts.
        :rtype: FlexOfferResultExpectedRevenues
        """
        return self._flexibility_revenues

    @flexibility_revenues.setter
    def flexibility_revenues(self, flexibility_revenues: FlexOfferResultExpectedRevenues):
        """Sets the flexibility_revenues of this PricingResultFlexContracts.


        :param flexibility_revenues: The flexibility_revenues of this PricingResultFlexContracts.
        :type flexibility_revenues: FlexOfferResultExpectedRevenues
        """

        self._flexibility_revenues = flexibility_revenues

    @property
    def aggregated_user_welfare(self) -> PricingResultAggregatedUserWelfare:
        """Gets the aggregated_user_welfare of this PricingResultFlexContracts.


        :return: The aggregated_user_welfare of this PricingResultFlexContracts.
        :rtype: PricingResultAggregatedUserWelfare
        """
        return self._aggregated_user_welfare

    @aggregated_user_welfare.setter
    def aggregated_user_welfare(self, aggregated_user_welfare: PricingResultAggregatedUserWelfare):
        """Sets the aggregated_user_welfare of this PricingResultFlexContracts.


        :param aggregated_user_welfare: The aggregated_user_welfare of this PricingResultFlexContracts.
        :type aggregated_user_welfare: PricingResultAggregatedUserWelfare
        """

        self._aggregated_user_welfare = aggregated_user_welfare

    @property
    def flexibility(self) -> FlexOffer:
        """Gets the flexibility of this PricingResultFlexContracts.


        :return: The flexibility of this PricingResultFlexContracts.
        :rtype: FlexOffer
        """
        return self._flexibility

    @flexibility.setter
    def flexibility(self, flexibility: FlexOffer):
        """Sets the flexibility of this PricingResultFlexContracts.


        :param flexibility: The flexibility of this PricingResultFlexContracts.
        :type flexibility: FlexOffer
        """

        self._flexibility = flexibility
